#!/usr/bin/env python3
'''
Triangular, pentagonal, and hexagonal

Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

    Triangle        T(n) = n(n+1)/2     1, 3, 6, 10, 15, ...
    Pentagonal      P(n) = n(3n−1)/2    1, 5, 12, 22, 35, ...
    Hexagonal       H(n) = n(2n−1)      1, 6, 15, 28, 45, ...

It can be verified that T(285) = P(165) = H(143) = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
'''

from itertools import count

from sequence import MonatonicIncreasingSequence

triangles = MonatonicIncreasingSequence(n * (n + 1) // 2 for n in count(1))
pentagons = MonatonicIncreasingSequence(n * (3 * n - 1) // 2 for n in count(1))
hexagons = MonatonicIncreasingSequence(n * (2 * n - 1) for n in count(1))

if __name__ == '__main__':
    # Want the first number over 40755 that is in triangles, pentagons and
    # hexagons.  It makes little difference which we iterate over, since we'll
    # need to generate numbers in each sequence up to the number under test in
    # any case, so let's just go with the wording in the question.
    for number in triangles.range(40756, None):
        if number in pentagons and number in hexagons:
            print(number)
            break
